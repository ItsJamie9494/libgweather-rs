initSidebarItems({"enum":[["ConditionPhenomenon","The current or forecasted significant phenomenon. The current or forecasted significant phenomenon."],["ConditionQualifier","An additional modifier applied to a #GWeatherConditionPhenomenon to describe the current or forecasted weather conditions."],["DistanceUnit","The measure unit to use for sky visibility values, when retrieved by gweather_info_get_value_visibility(). The measure unit to use for sky visibility values, when retrieved by gweather_info_get_value_visibility()."],["LocationLevel","The size/scope of a particular [`Location`][crate::Location]."],["PressureUnit","The measure unit to use for atmospheric pressure values, when retrieved by gweather_info_get_value_pressure(). The measure unit to use for atmospheric pressure values, when retrieved by gweather_info_get_value_pressure()."],["Sky","The sky and cloud visibility. In general it is discouraged to use this value directly to compute the forecast icon: applications should instead use gweather_info_get_icon_name() or gweather_info_get_symbolic_icon_name(). The sky and cloud visibility. In general it is discouraged to use this value directly to compute the forecast icon: applications should instead use gweather_info_get_icon_name() or gweather_info_get_symbolic_icon_name()."],["SpeedUnit","The measure unit to use for wind speed values, when retrieved by gweather_info_get_value_wind(). The measure unit to use for wind speed values, when retrieved by gweather_info_get_value_wind()."],["TemperatureUnit","The measure unit to use for temperature values, when retrieved by the gweather_info_get_value_temp() family of functions. The measure unit to use for temperature values, when retrieved by the gweather_info_get_value_temp() family of functions."],["WindDirection","The direction of the prevailing wind. Composite values such as north-north-east indicate a direction between the two component value (north and north-east). The direction of the prevailing wind. Composite values such as north-north-east indicate a direction between the two component value (north and north-east)."]],"struct":[["FormatOptions","Format options to influence the text returned by the `gweather_*_to_string_full()` functions."],["Info","`GWeatherInfo` provides a handy way to access weather conditions and forecasts from a [`Location`][crate::Location], aggregating multiple different web services."],["Location","A `GWeatherLocation` represents a “location” of some type known to libgweather; anything from a single weather station to the entire world."],["Provider",""]],"type":[["MoonLatitude",""],["MoonPhase",""]]});